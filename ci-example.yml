name: Python CI Pipeline

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [3.7, 3.8, 3.9, 3.10]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            - name: Run tests with pytest
              run: |
                  pytest

    deploy:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Deploy Application
              run: |
                  echo "Deploying the application..."

# on:
# The pipeline is triggered when there is a push or a pull request targeting the main branch.

# jobs > test:
# This section defines a test job that will run in an ubuntu-latest environment.

# strategy.matrix:
# This allows the project to be tested on multiple Python versions (from 3.7 to 3.10).
# It ensures that your code works across different Python interpreters.

# steps:

# Checkout repository:
# Retrieves the repository's code, ensuring that the workflow has the latest version of your code to work with.

# Set up Python:
# Configures the desired Python version using the provided matrix value, so tests run under that specific version.

# Install dependencies:
# Updates pip and installs the required packages listed in the requirements.txt file. This step ensures that all necessary libraries are available before testing begins.

# Run tests with pytest:
# Executes the test suite using Pytest, allowing you to see if any part of your code is failing.

# Deploy Application step:
# A simple echo command simulates the deployment process.
